package ch.schiemens.frontend.lexer;

public enum TokenState {

    IDENTIFIER("IDENTIFIER"),
    STRING_S("STRING_START"), STRING_E("STRING_END"),
    CHAR_S("CHAR_START"), CHAR_E("CHAR_END"),
    NUM_INT("POSSIBLE_INT"), INT("INT"),
    DOUBLE_S("DOUBLE_START"), DOUBLE_E("DOUBLE_END"),
    HEX_S("HEX_START"), HEX_E("HEX_END"),
    OCTAL_S("OCTAL_START"), OCTAL_E("OCTAL_END"),
    BINARY_S("BINARY_START"), BINARY_E("BINARY_END"),
    CHAR_MULTI_S("CHAR_MULTI_START"), CHAR_MULTI_E("CHAR_MULTI_END"),
    CHAR_SINGLE("CHAR_SINGLE"),
    STRING_MULTI_S("STRING_MULTI_START"), STRING_MULTI_E("STRING_MULTI_END"),
    STRING_SINGLE("STRING_SINGLE"),
    S_EQ("S_EQ"), S_LT("S_LT"), S_GT("S_GT"),
    S_EQ_EQ("S_EQ_EQ"), S_LT_EQ("S_LT_EQ"), S_GT_EQ("S_GT_EQ"), S_NOT_EQ("S_NOT_EQ"),
    S_PLUS("S_PLUS"), S_MINUS("S_MINUS"), S_MUL("S_MUL"), S_DIV("S_DIV"),
    S_MOD("S_MOD"), S_EXPO("S_EXPO"), S_EXPO_MUL("S_EXPO_MUL"),
    S_AND_S("S_AND_S"), S_AND_E("S_AND_E"), S_OR_S("S_OR_S"), S_OR_E("S_OR_E"),
    S_PLUS_EQ("S_PLUS_EQ"), S_MINUS_EQ("S_MINUS_EQ"), S_MUL_EQ("S_MUL_EQ"),
    S_DIV_EQ("S_DIV_EQ"), S_MOD_EQ("S_MOD_EQ"), S_EXPO_EQ("S_EXPO_EQ"), S_EXPO_MUL_EQ("S_EXPO_MUL_EQ"),
    S_PLUS_PLUS("S_PLUS_PLUS"), S_MINUS_MINUS("S_MINUS_MINUS"),
    S_ARRAY_START("S_ARRAY_START"), S_ARRAY_END("S_ARRAY_END"),
    S_CURLY_BRACKET_START("S_CURLY_BRACKET_START"), S_CURLY_BRACKET_END("S_CURLY_BRACKET_END"),
    S_PAREN_START("S_PAREN_START"), S_PAREN_END("S_PAREN_END"),
    S_DOT("S_DOT"), S_COLON("S_COLON"), S_NOT("S_NOT"), S_SEMI("S_SEMI"), S_COMMA("S_COMMA"),
    S_INLINE_COMMENT("S_INLINE_COMMENT"),
    MULTI_LINE_COMMENT_S("MULTI_LINE_COMMENT_START"),
    MULTI_LINE_COMMENT_S1("MULTI_LINE_COMMENT_INTERMEDIATE"),
    MULTI_LINE_COMMENT_E("MULTI_LINE_COMMENT_END"),
    START("START"), ERROR("ERROR"), CREATE("CREATE"), CREATE_B("CREATE_BACKTRACK"), EOF("EOF");

    private final String name;

    TokenState(String name) {
        this.name = name;
    }

    @Override
    public String toString() {
        return name;
    }

}
